// Test schema (SQLite) - derived from schema.prisma but uses SQLite datasource
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

enum FollowStatus {
  PENDING
  ACCEPTED
  REJECTED
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  username  String   @unique
  password  String
  name      String?
  bio       String?
  avatarUrl String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  posts    Post[]
  comments Comment[]
  likes    Like[]

  following Follow[] @relation("follower")
  followers Follow[] @relation("followee")
}

model Post {
  id        Int      @id @default(autoincrement())
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
  body      String
  imageUrl  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  comments Comment[]
  likes    Like[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
  body      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Like {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
  createdAt DateTime @default(now())

  @@unique([userId, postId])
}

model Follow {
  id         Int          @id @default(autoincrement())
  follower   User         @relation("follower", fields: [followerId], references: [id])
  followerId Int
  followee   User         @relation("followee", fields: [followeeId], references: [id])
  followeeId Int
  status     FollowStatus @default(PENDING)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt

  @@unique([followerId, followeeId])
}
